#*******************************************************************************
# Licensed Materials - Property of IBM
# (c) Copyright IBM Corp. 2023. All Rights Reserved.
#
# Note to U.S. Government Users Restricted Rights:
# Use, duplication or disclosure restricted by GSA ADP Schedule
# Contract with IBM Corp.
#*******************************************************************************

################################################################################
# Enviroment variables for all z/OS managed nodes (target) that do not need
# further configuration.
################################################################################
environment_vars:
  _BPXK_AUTOCVT: "ON"
  ZOAU_HOME: "{{ ZOAU }}"
  #PYTHONPATH: "{{ ZOAU }}/lib"
  PYTHONSTDINENCODING: "cp1047" 
  LIBPATH: "{{ ZOAU }}/lib:{{ PYZ }}/lib:/lib:/usr/lib:/lib"
  PATH: "{{ ZOAU }}/bin:{{ PYZ }}/bin:/bin:/var/bin"
  _CEE_RUNOPTS: "FILETAG(AUTOCVT,AUTOTAG) POSIX(ON)"
  _TAG_REDIR_ERR: "txt"
  _TAG_REDIR_IN: "txt"
  _TAG_REDIR_OUT: "txt"
  LANG: "C"
  STEPLIB : '{{ hlq_ims_steplib }}.SDFSRESL'
  #DEPLOY_FAST_COPY: True


################################################################################
# Description of the properties used in this configuration:
# - Property `PYZ` is the python installation home path on the z/OS managed node (target),
#    e.g, pyz: "/usr/lpp/IBM/cyp/v3r12/pyz"
# - Property `ZOAU` is the ZOAU installation home on the z/OS managed node (target),
#    e.g, zoau: "/usr/lpp/IBM/zoautil"
# - property `ansible_python_interpreter` is the z/OS managed node (target) Python
#    binary installation path, e.g, ansible_python_interpreter: "{{PYZ}}/bin/python3.8"
#
# Note, PYZ and ZOAU environment variables must be configured.
################################################################################
PYZ: "/usr/lpp/IBM/cyp/pyz"
ZOAU: "/usr/lpp/IBM/zoautil"

  
################################################################################
# Do not configure, variable substituion will correctly set the
# variable`ansible_python_interpreter`
################################################################################
ansible_python_interpreter: "{{ PYZ }}/bin/python3"  

################################################################################
# Description of the properties used in this configuration:
################################################################################
# - Property BPXK_AUTOCVT must be configured to "ON"; e.g., _BPXK_AUTOCVT: "ON"
# - Property ZOAU_HOME is the ZOA Utilities install root path; e.g., ZOAU_HOME: "/usr/lpp/IBM/zoautil"
# - Property PYTHONPATH is the ZOA Utilities Python library path; e.g., PYTHONPATH: "/usr/lpp/IBM/zoautil/lib"
# - Property LIBPATH is both the path to the Python libraries on the target
#   and the ZOA Utilities Python library path separated by semi-colons; e.g.,
#   LIBPATH: "/usr/lpp/IBM/zoautil/lib/:/usr/lpp/IBM/cyp/v3r12/pyz/lib:/usr/lib:/lib:."
# - Property PATH is the ZOA utilities BIN path and Python interpreter path, e.g.,
#   PATH: "/usr/lpp/IBM/zoautil/bin:/usr/lpp/IBM/cyp/v3r12/pyz/bin:/bin"
# - Property _CEE_RUNOPTS is the invocation Language EnvironmentÂ® runtime
#   options for programs and used by Python. e.g.,
#   _CEE_RUNOPTS: "FILETAG(AUTOCVT,AUTOTAG) POSIX(ON)"
# - Properties __TAG_REDIR_ERR, _TAG_REDIR_IN, _TAG_REDIR_OUT are txt and used
#   by the shell; e.g.,
#      _TAG_REDIR_ERR: "txt"
#      _TAG_REDIR_IN: "txt"
#      _TAG_REDIR_OUT: "txt"
# - Property LANG is the name of the default locale; value
#   C specifies the POSIX locale; for example: ``LANG: "C"``.
################################################################################

# Deploy specific variables
common_pds_load_spec:
  type: LIBRARY
  space_primary: 10
  space_secondary: 20
  space_type: CYL
  record_format: U
  record_length: 0

common_pds_binary_spec:
  type: LIBRARY
  space_primary: 10
  space_secondary: 20
  space_type: CYL
  record_format: FB
  record_length: 80
  
common_pds_text_spec:
  type: LIBRARY
  space_primary: 5
  space_secondary: 10
  space_type: CYL
  record_format: FB
  record_length: 80
  
seq_spec:
  type: SEQ
  space_primary: 5
  space_secondary: 2
  space_type: TRK
  record_format: FB
  record_length: 20  

seq_spec_a:
  type: SEQ
  space_primary: 2
  space_secondary: 1
  space_type: TRK
  record_format: FB
  record_length: 15
  

hlq: 'NAZARE.WDEPLOY.ANSIBLE'
hlq_cics: 'NAZARE.WDEPLOY.ANSIBLE'
hlq_ims: 'NAZARE.WDEPLOY.ANSIBLE'
uss_root_folder: '/tmp/uss_root'
hlq_ims_steplib: "{{ hlq_ims }}"
hlq_ims_pgmlib: "{{ hlq_ims }}"


default_package_jobcard: "BINDPKG JOB 'WD-PKGBIND',MSGLEVEL=(1,1),MSGCLASS=R,NOTIFY=&SYSUID"
default_plan_jobcard: "BINDPLA JOB 'WD-PLANBIND',MSGLEVEL=(1,1),MSGCLASS=R,NOTIFY=&SYSUID"
default_db2_user: "{{ansible_user}}"
default_db2_action: "REPLACE"
db2_sys_def:
   sdsnload: DSN.V12R1M0.SDSNLOAD
   subsys: DBC1
   qualifier: GENADB0
   package: GENASA1
   plan: GENAONE
   sqlid: "{{default_db2_user}}"
   package_jobcard: "{{default_package_jobcard}}"
   plan_jobcard: "{{default_plan_jobcard}}"
   package_action: "{{default_db2_action}}"
   plan_action: "{{default_db2_action}}"
   package_job_max_rc: 4
   plan_job_max_rc: 4
   plan_pklist: '*.GENASA1.*'
   
default_job_return_output: True

default_mfsutl_jobcard: "MFSUTL  JOB 'WD-MFSUTL',MSGLEVEL=(1,1),MSGCLASS=R,NOTIFY=&SYSUID"
default_mfsutl_procname: "MFSUTL"
ims_mfsutl:
   max_rc: 4
   return_output: "{{ mfsutl_job_return_output if mfsutl_job_return_output is defined else False }}"
   procname: "{{default_mfsutl_procname}}"
   jobcard: "{{default_mfsutl_jobcard}}"
   encoding:
     from: UTF-8
     to: IBM-1047
   wait_time_s: 300
default_cics_cmci_action: 'PHASEIN'
cics_sys_def:
   cmci_host: "{{ ansible_host }}"
   cmci_port: 1490
#   cmci_cert: 
#   cmci_key: 
   cmci_user: "{{ansible_user}}"
   cmci_password: "{{ansible_password if ansible_password is defined else None}}"
   context: CICS01
   scheme: http
#   scope: 
   insecure: true
   csd_group: GENASAP

# types to manage
default_types: 'types'
default_copy_by_folder: True
types:
  - type: 'load'
    copy_by_folder: '{{default_copy_by_folder}}'
    pds: 
      name: '{{ hlq }}.LOADLIB'
      spec: "{{common_pds_load_spec}}"
      backup: '{{ hlq }}.BACK.LOADLIB'
    is_load: True
    aliases: True
  - type: 'dbrm'
    copy_by_folder: '{{default_copy_by_folder}}'
    pds: 
      name: '{{ hlq_cics }}.DBRM'
      spec: "{{common_pds_binary_spec}}"
      backup: '{{ hlq_cics }}.BACK.DBRM'
    is_binary: True 
    db2_systems:
    - "{{ db2_sys_def }}"
  - type: 'cicsload'
    copy_by_folder: '{{default_copy_by_folder}}'
    pds: 
      name: '{{ hlq_cics }}.LOADLIB'
      spec: "{{common_pds_load_spec}}"
      backup: '{{ hlq_cics }}.BACK.LOADLIB'
    is_load: True
    aliases: True
    cics_systems:
    - "{{ cics_sys_def }}"
  - type: 'mapload'
    copy_by_folder: '{{default_copy_by_folder}}'
    pds: 
      name: '{{ hlq_cics }}.LOADLIB'
      spec: "{{common_pds_load_spec}}"
      backup: '{{ hlq_cics }}.BACK.LOADLIB'
    is_load: True
    aliases: True
    cics_systems:
    - "{{ cics_sys_def }}"
  - type: 'imsload'
    copy_by_folder: '{{default_copy_by_folder}}'
    pds: 
      name: '{{ hlq_ims_pgmlib }}.PGMLIB'
      spec: "{{common_pds_load_spec}}"
      backup: '{{ hlq_ims_pgmlib }}.BACK.PGMLIB'
    is_load: True
  - type: 'mfssource'
    copy_by_folder: '{{default_copy_by_folder}}'
    pds: 
      name: '{{ hlq_ims }}.MFS'
      spec: "{{common_pds_text_spec}}"
      backup: '{{ hlq_ims }}.BACK.MFS'
    is_ims_mfs: True
    #encoding:
    #  from: UTF-8
    #  to: IBM-1047
  - type: 'psb'
    copy_by_folder: '{{default_copy_by_folder}}'
    pds: 
      name: '{{ hlq_ims }}.PSBLIB'
      spec: "{{common_pds_load_spec}}"
      backup: '{{ hlq_ims }}.BACK.PSBLIB'
    is_load: True
    is_ims_psb: True
  - type: 'dbd'
    copy_by_folder: '{{default_copy_by_folder}}'
    pds: 
      name: '{{ hlq_ims }}.DBDLIB'
      spec: "{{common_pds_load_spec}}"
      backup: '{{ hlq_ims }}.BACK.DBDLIB' 
    is_load: True   
    is_ims_dbd: True
  - type: 'jcl'
    copy_by_folder: '{{default_copy_by_folder}}'
    pds: 
      name: '{{ hlq }}.JCL'
      spec: "{{common_pds_text_spec}}"
      backup: '{{ hlq }}.BACK.JCL'
#    encoding:
#      from: UTF-8
#      to: IBM-1047
    text_subs:
    - pattern: "#SUB1"
      replace: "01"
    - pattern: "#SUB2"
      replace: "02"
    - pattern: "#SUB3"
      replace: "03"
  - type: 'copy'
    copy_by_folder: '{{default_copy_by_folder}}'
    pds: 
      name: '{{ hlq }}.COPY'
      spec: "{{common_pds_text_spec}}"
      backup: '{{ hlq }}.BACK.COPY'
  - type: 'bin'
    uss: 
      dest: "{{ uss_root_folder }}/bin/"
      backup_dest: "{{ uss_root_folder }}/bin/back/"
      dest_mode: '0777'
      artifact_mode: '0755'
  - type: 'txt'
    encoding:
      from: UTF-8
      to: IBM-1047
    uss: 
      dest: "{{ uss_root_folder }}/txt/"
      backup_dest: "{{ uss_root_folder }}/txt/back/"
      dest_mode: '0777'
      artifact_mode: '0755'
  - type: 'sh'
    uss: 
      dest: "{{ uss_root_folder }}/sh/"
      backup_dest: "{{ uss_root_folder }}/sh/back/"
      dest_mode: '0777'
      artifact_mode: '0755'

  - type: 'seq'
    is_binary: False
    is_sequential: True
    encoding:
      from: UTF-8
      to: IBM-037
    ds: 
      prefix: "{{ hlq }}.SEQ"
      backup_prefix: "{{ hlq }}.BACK.SEQ"
      spec: "{{seq_spec}}"

  - type: 'seqa'
    is_binary: False
    is_sequential: True
    encoding:
      from: UTF-8
      to: IBM-037
    ds: 
      prefix: "{{ hlq }}.SEQ"
      backup_prefix: "{{ hlq }}.BACK.SEQ"
      spec: "{{seq_spec_a}}"

# Default folders and logging values
wd_env:
   uss_dir: "/tmp/wd_deploy/{{ansible_user|lower}}/{{inventory_hostname}}"
   local_dir: "/tmp/wd_deploy/{{lookup('env','USER')|lower}}/{{inventory_hostname}}"
#wd_log: False

# Variables for system_command template
system_command_default:
   cmd: "D SYMBOLS"
   verbose: False
   wait_time_s: 5
   wait: True
#   success_message: 
#   - "MESS1"
#   - "ACTIVATED"
#   - "MESS2"
   error_message_keywords: 
   - "FATAL"
   - "INVALID"
   - "ERROR"

# Variables for tso_command template
tso_command_default:
   commands:
    - DELETE '{{ hlq }}.SEQ01'
    - DELETE '{{ hlq }}.PDS01'
   max_rc: 4
   
# Variables for shell_command template
shell_command_default:
   cmd: |
    #!/bin/sh
    echo "hello world from $(whoami)"
   delegate: True
   #become: True
   #become_user: "root"
   #become_method: "sudo"
   #become_flags: ""


# Variables for include_vars template
include_file_must_exist_default: True
include_file_name_default:
- "vars/vars_wd_test.yml"
#- "vars_wd_host01.yml"

# Variables for job_submit template
job_submit_default:
   src: '{{ hlq }}.JCL(HELLO1)'
   location: "DATA_SET"
#   return_output: True
#   max_rc: 4
#   encoding:
#     from: UTF-8
#     to: IBM-1047
#   volume: ""
#   wait_time_s: 10

# Variables for ds_create and ds_delete templates
ds_create_lsds_default:
- name: '{{ hlq }}.LIB'
  spec: '{{common_pds_load_spec}}'
ds_delete_lsds_default:
- name: '{{ hlq }}.LIB'


# Variables for template building block    #
template_name_default:
   src: "spec_templates/ex01-sh.j2"
   dest: "{{wd_deploy_dir_local}}/{{inventory_hostname}}_ex01.sh"
#   owner:
#   group:
   mode: 0755

# Variables for template building block    #
olcutl_template:
   src: "oclutil.j2"
   dest: "{{wd_deploy_dir_local}}/{{inventory_hostname}}_oclutil.jcl"
   mode: 0755

olcutl_cat_template:
   src: "oclutil.j2"
   dest: "{{wd_deploy_dir_local}}/{{inventory_hostname}}_oclutil.jcl"
   mode: 0755


olcutl_job:
   src: '{{wd_deploy_dir_local}}/{{inventory_hostname}}_oclutil.jcl'
   location: 'LOCAL'
   max_rc: 4
   return_output: "{{ olcutl_job_return_output if olcutl_job_return_output is defined else False }}"
   
# Variables for ims_acb_gen building block 
ims_acb_gen_default:
   acb_lib: '{{ hlq_ims }}.ACBLIB'
   command_input: "BUILD"
   steplib :  
     - '{{ hlq_ims_steplib }}.SDFSRESL'
   reslib: 
     - '{{ hlq_ims_steplib }}.SDFSRESL'
#   psb_lib: 
#     - '{{ hlq_ims }}.PSBLOADA'
#     - '{{ hlq_ims }}.PSBLOADB'
#   dbd_lib: 
#     - '{{ hlq_ims }}.DBDLOADA'
#   build_psb: False
#   compression: PRECOMP,POSTCOMP
#   all_psb: True

# Variables for ims_catalog_populate building block 
ims_catalog_populate_default:
   acb_lib: 
     - '{{ hlq_ims }}.ACBLIB'
   mode: "READ"
   ims_id: "{{ ims_id }}"
   steplib : 
     - '{{ hlq_ims_steplib }}.SDFSRESL'
   reslib: 
     - '{{ hlq_ims_steplib }}.SDFSRESL'
   proclib: 
     - '{{ hlq_ims }}.PROCLIB'
   psb_lib: 
     - '{{ hlq_ims }}.PSBLIB'
#     - '{{ hlq_ims }}.PSBLOADA'
   dbd_lib: 
     - '{{ hlq_ims }}.DBDLIB'
   online_batch: False
   buffer_pool_param_dataset: '{{ hlq_ims }}.PROCLIB(DFSVSMHP)'
   primary_log_dataset: 
     dataset_name: '{{ hlq_ims }}.IMSLOG'
     disposition: "SHR"
#     record_format: "VB"
#     record_length: 6140
#     block_size: 6144
#     primary: 10
#     primary_unit: "TRK" 
#     secondary: 10
#     secondary_unit: "TRK" 
#     normal_disposition: "CATLG"
#     abnomal_disposition: "DELETE"
#     volumes:
#       - VOL001
#     type: "???"  
#     storage_class: ""
#     management_class: ""
#     data_class: ""
#   bootstrap_dataset: 
#     dataset_name: '{{ hlq_ims }}.IMSBST'
#     disposition: "NEW"
#     primary: 10
#     primary_unit: "TRK" 
#     secondary: 10
#     secondary_unit: "TRK" 
#     normal_disposition: "CATLG"
#     abnomal_disposition: "DELETE"
#     volumes:
#      - VOL001
#     type: "SEQ"  
#     storage_class: ""
#     management_class: ""
#     data_class: ""
#   check_timestamp: False
#   control_statements: "UPDATE"
#   dbrc: False
#   directory_dataset: 
#     dataset_name: '{{ hlq_ims }}.IMSDIR'
#     disposition: "NEW"
#     primary: 10
#     primary_unit: "TRK" 
#     secondary: 10
#     secondary_unit: "TRK" 
#     normal_disposition: "CATLG"
#     abnomal_disposition: "DELETE"
#     volumes:
#      - VOL001
#     type: "SEQ"  
#     storage_class: ""
#     management_class: ""
#     data_class: ""
#   directory_staging_dataset: 
#     dataset_name: '{{ hlq_ims }}.IMSSTG'
#     disposition: "NEW"
#     primary: 10
#     primary_unit: "TRK" 
#     secondary: 10
#     secondary_unit: "TRK" 
#     normal_disposition: "CATLG"
#     abnomal_disposition: "DELETE"
#     volumes:
#      - VOL001
#     type: "SEQ"  
#     storage_class: ""
#     management_class: ""
#     data_class: ""
#   irlm_id: "The IRLM ID if IRLM is enabled. Cannot be specified when online_batch is true."
#   modstat: '{{ hlq_ims }}.MODSTAT'
#   secondary_log_dataset: 
#     dataset_name: '{{ hlq_ims }}.IMSLOG2'
#     disposition: "SHR"
#     record_format: "VB"
#     record_length: 6140
#     block_size: 6144
#     primary: 10
#     primary_unit: "TRK" 
#     secondary: 10
#     secondary_unit: "TRK" 
#     normal_disposition: "CATLG"
#     abnomal_disposition: "DELETE"
#     volumes:
#       - VOL001
#     type: "???"  
#     storage_class: ""
#     management_class: ""
#     data_class: ""
#   sysabend: "*"
#   temp_acb_dataset:
#     dataset_name: '{{ hlq_ims }}.TMPACB'
#     disposition: "NEW"
#     primary: 10
#     primary_unit: "TRK" 
#     secondary: 10
#     secondary_unit: "TRK" 
#     normal_disposition: "CATLG"
#     abnomal_disposition: "DELETE"
#     volumes:
#      - VOL001
#     type: "SEQ"  
#     storage_class: ""
#     management_class: ""
#     data_class: ""
ims_catalog_purge_default:
   mode: "ANALYSIS"
   online_batch: False
   ims_id: "{{ ims_id }}"
#   dbrc: False
#   irlm_id: "The IRLM ID if IRLM is enabled. Cannot be specified when online_batch is true."
#  buffer_pool_param_dataset: "xxx"
   steplib : 
     - '{{ hlq_ims_steplib }}.SDFSRESL'
   reslib: 
     - '{{ hlq_ims_steplib }}.SDFSRESL'
   proclib: 
     - '{{ hlq_ims }}.PROCLIB'
   psb_lib: 
     - '{{ hlq_ims }}.PSBLIB'
#     - "{{ hlq_ims }}.PSBLOADA"
   dbd_lib: 
     - '{{ hlq_ims }}.DBDLIB'
   buffer_pool_param_dataset: '{{ hlq_ims }}.PROCLIB(DFSVSMHP)'
   primary_log_dataset: 
     dataset_name: '{{ hlq_ims }}.IMSLOG'
     disposition: "SHR"
#     record_format: "VB"
#     record_length: 6140
#     block_size: 6144
#     primary: 10
#     primary_unit: "TRK" 
#     secondary: 10
#     secondary_unit: "TRK" 
#     normal_disposition: "CATLG"
#     abnomal_disposition: "DELETE"
#     volumes:
#       - VOL001
#     type: "???"  
#     storage_class: ""
#     management_class: ""
#     data_class: ""
#   delete_by_dbd_version:
#   - member_name: DBDABCDE
#     version_number: 02
#   - member_name: xxx
#     version_number: 03
#   update_retention_criteria:
#   - resource: DBD
#     member_name: DBDNAMEA
#     instances: 10
#     days: 03
#   - resource: PSB
#     member_name: PSBNAMEA
#     instances: 10
#     days: 03
#   delete:
#   - resource: DBD
#     member_name: DBDNAMEA
#     time_stamp: 10
#     days: 03
#   managed_acbs: False
#   resource_chkp_freq: 150
#   sysut1: 
#     dataset_name: '{{ hlq_ims }}.SYSPUR'
#     disposition: "NEW"
#     block_size: 10000
#     primary: 10
#     primary_unit: "TRK" 
#     secondary: 10
#     secondary_unit: "TRK" 
#     normal_disposition: "CATLG'
#     abnomal_disposition: "DELETE"
#     volumes:
#       - VOL001
#     type: "SEQ"  
#     storage_class: ""
#     management_class: ""
#     data_class: ""

# Variables for ims_command building block 
ims_command_default:
   command: "QUERY PGM SHOW(ALL)"
   plex: "{{ ims_plex }}"
   route: 
     - "{{ ims_id }}"  
#   batch:
#     - command: "QUERY PGM SHOW(ALL)"
#       plex: "{{ ims_plex }}" 
#     - command: "DISPLAY STATUS"
#       plex: "{{ ims_plex }}"     

# Variables for ims_dbrc building block 
ims_dbrc_default:
   command: 
     - "LIST.RECON STATUS"
   steplib : 
     - "{{ hlq_ims_steplib }}.SDFSRESL" 
   recon1: "{{ hlq_ims }}.RECON1"
   recon2: "{{ hlq_ims }}.RECON2"
   recon3: "{{ hlq_ims }}.RECON3" 

ims_region: 'IMS15M11'
ims_plex: 'PLEX1'
ims_id: 'IVP1'

ims_stop_reg:
   command: "STOP REGION JOBNAME {{ims_region}}"
   plex: "{{ ims_plex }}"
   route: 
     - "{{ ims_id }}"  

ims_start_reg:
   command: "START REGION {{ims_region}}"
   plex: "{{ ims_plex }}"
   route: 
     - "{{ ims_id }}"

ims_restart_reg:
   route: 
     - "{{ ims_id }}"
   batch:
     - command: "STOP REGION JOBNAME {{ims_region}}"
       plex: "{{ ims_plex }}"
     - command: "START REGION {{ims_region}}"
       plex: "{{ ims_plex }}"

ims_display_reg:
   command: "DISPLAY ACT"
   plex: "{{ ims_plex }}"
   route: 
     - "{{ ims_id }}"  

ims_switch_all:
   route: 
     - "{{ ims_id }}"  
   batch:
     - command: "DISPLAY MODIFY ALL"
       plex: "{{ ims_plex }}"
     - command: "MODIFY PREPARE ALL"
       plex: "{{ ims_plex }}" 
     - command: "MODIFY COMMIT"
       plex: "{{ ims_plex }}" 
     - command: "DISPLAY MODIFY ALL"
       plex: "{{ ims_plex }}"

ims_catalog_update:
   acb_lib: 
     - '{{ hlq_ims }}.ACBLIB'
   mode: "UPDATE"
   ims_id: "{{ ims_id }}"
   steplib : 
     - '{{ hlq_ims_steplib }}.SDFSRESL'
   reslib: 
     - '{{ hlq_ims_steplib }}.SDFSRESL'
   proclib: 
     - '{{ hlq_ims }}.PROCLIB'
   psb_lib: 
     - '{{ hlq_ims }}.PSBLIB'
   dbd_lib: 
     - '{{ hlq_ims }}.DBDLIB'
   online_batch: False
   buffer_pool_param_dataset: '{{ hlq_ims }}.PROCLIB(DFSVSMHP)'
   primary_log_dataset: 
     dataset_name: '{{ hlq_ims }}.PRLOG'
     disposition: "SHR"
     
# Variables for ims_catalog_populate building block update
ims_catalog_populate_stage:
   acb_lib: 
     - '{{ hlq_ims }}.ACBLIB'
   mode: "UPDATE"
   dbrc: True
   irlm_id: 'IRLM'
   dfsdf_member: 'IVP'
   ims_id: "{{ ims_id }}"
   steplib : 
     - '{{ hlq_ims }}.SDFSRESL'
   reslib: 
     - '{{ hlq_ims }}.SDFSRESL'
   proclib: 
     - '{{ hlq_ims }}.PROCLIB'
   psb_lib: 
     - '{{ hlq_ims }}.PSBLIB'
   dbd_lib: 
     - '{{ hlq_ims }}.DBDLIB'
   buffer_pool_param_dataset: "{{ hlq_ims }}.PROCLIB(DFSVSMHP)"
   primary_log_dataset:
     dataset_name: '{{ hlq_ims }}.LOG1'
   check_timestamp: True
   control_statements:
     print_duplicate_resources: True
     managed_acbs:
      stage:
        save_acb: "UNCOND"
        clean_staging_dataset: true

ims_catalog_populate_update:
   acb_lib:
     - '{{ hlq_ims }}.ACBLIB'
   mode: "UPDATE"
   dbrc: True
   dfsdf_member: 'IVP'
   ims_id: "{{ ims_id }}"
   steplib :
     - '{{ hlq_ims }}.SDFSRESL'
   reslib:
     - '{{ hlq_ims }}.SDFSRESL'
   proclib:
     - '{{ hlq_ims }}.PROCLIB'
   psb_lib:
     - '{{ hlq_ims }}.PSBLIB'
   dbd_lib:
     - '{{ hlq_ims }}.DBDLIB'
   buffer_pool_param_dataset: "{{ hlq_ims }}.PROCLIB(DFSVSMHP)"
   primary_log_dataset:
     dataset_name: '{{ hlq_ims }}.LOG1'
   check_timestamp: True
   control_statements:
     print_duplicate_resources: True
     managed_acbs:
      update:
        replace_acb: "UNCOND"
        share_mode: True

# Variables for ims_command ALL Switch building block
ims_switch_cat_all:
   route: 
     - "{{ ims_id }}"
   batch:
     - command: "DISPLAY MODIFY ALL"
       plex: "{{ ims_plex }}"
     - command: "IMPORT DEFN SOURCE(CATALOG)"
       plex: "{{ ims_plex }}"
     - command: "MODIFY PREPARE ALL"
       plex: "{{ ims_plex }}" 
     - command: "MODIFY COMMIT"
       plex: "{{ ims_plex }}"
     - command: "DISPLAY MODIFY ALL"
       plex: "{{ ims_plex }}"

